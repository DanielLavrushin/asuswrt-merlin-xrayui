name: Manual Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true
        default: "0.1"

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Update XRAYUI_VERSION
        run: |
          echo "Updating XRAYUI_VERSION to ${{ github.event.inputs.version }} in /dist/xrayui"
          sed -i "s/^XRAYUI_VERSION=.*/XRAYUI_VERSION=\"${{ github.event.inputs.version }}\"/" dist/xrayui

      - name: Archive dist
        run: tar --transform 's|^|xrayui/|' -czf asuswrt-merlin-xrayui.tar.gz -C dist .

      - name: Read Changelog (Latest Version Only)
        id: read_changelog
        run: |
          echo "Extracting latest changelog entry..."
          CHANGELOG=$(awk '/^## \[/{if (NR > 1) exit} {print}' CHANGELOG.md)
          echo "changelog<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: "Release ${{ github.event.inputs.version }}"
          draft: false
          prerelease: false
          body: ${{ env.changelog }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: asuswrt-merlin-xrayui.tar.gz
          asset_name: asuswrt-merlin-xrayui.tar.gz
          asset_content_type: application/gzip
