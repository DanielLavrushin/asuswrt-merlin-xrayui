import{_ as l,c as o,a as t,b as e,d as n,w as s,r as d,o as u,e as r}from"./app-eTybrgsj.js";const c={},p={class:"table-of-contents"};function x(y,a){const i=d("router-link");return u(),o("div",null,[a[27]||(a[27]=t('<h1 id="command‐line-cli" tabindex="-1"><a class="header-anchor" href="#command‐line-cli"><span>Command‑line (CLI)</span></a></h1><p><code>xrayui</code> lives at <code>/jffs/scripts/xrayui</code> and is run over SSH on your router. It is also possible to invoke short version of the command (<code>xrayui &lt;command&gt;</code> instead of <code>/jffs/scripts/xrayui &lt;command&gt;</code>).</p><h2 id="quick-reference" tabindex="-1"><a class="header-anchor" href="#quick-reference"><span>Quick reference</span></a></h2>',3)),e("nav",p,[e("ul",null,[e("li",null,[n(i,{to:"#quick-reference"},{default:s(()=>a[0]||(a[0]=[r("Quick reference",-1)])),_:1,__:[0]})]),e("li",null,[n(i,{to:"#service-lifecycle"},{default:s(()=>a[1]||(a[1]=[r("Service lifecycle",-1)])),_:1,__:[1]}),e("ul",null,[e("li",null,[n(i,{to:"#xrayui-start"},{default:s(()=>a[2]||(a[2]=[r("xrayui start",-1)])),_:1,__:[2]})]),e("li",null,[n(i,{to:"#xrayui-stop"},{default:s(()=>a[3]||(a[3]=[r("xrayui stop",-1)])),_:1,__:[3]})]),e("li",null,[n(i,{to:"#xrayui-restart"},{default:s(()=>a[4]||(a[4]=[r("xrayui restart",-1)])),_:1,__:[4]})]),e("li",null,[n(i,{to:"#xrayui-version"},{default:s(()=>a[5]||(a[5]=[r("xrayui version",-1)])),_:1,__:[5]})])])]),e("li",null,[n(i,{to:"#updates"},{default:s(()=>a[6]||(a[6]=[r("Updates",-1)])),_:1,__:[6]}),e("ul",null,[e("li",null,[n(i,{to:"#xrayui-update"},{default:s(()=>a[7]||(a[7]=[r("xrayui update",-1)])),_:1,__:[7]})]),e("li",null,[n(i,{to:"#xrayui-update-version"},{default:s(()=>a[8]||(a[8]=[r("xrayui update <version>",-1)])),_:1,__:[8]})]),e("li",null,[n(i,{to:"#xrayui-update-xray-version-latest"},{default:s(()=>a[9]||(a[9]=[r("xrayui update xray <version|latest>",-1)])),_:1,__:[9]})])])]),e("li",null,[n(i,{to:"#health-diagnostics"},{default:s(()=>a[10]||(a[10]=[r("Health & diagnostics",-1)])),_:1,__:[10]}),e("ul",null,[e("li",null,[n(i,{to:"#xrayui-fixme"},{default:s(()=>a[11]||(a[11]=[r("xrayui fixme",-1)])),_:1,__:[11]})]),e("li",null,[n(i,{to:"#xrayui-diagnostics"},{default:s(()=>a[12]||(a[12]=[r("xrayui diagnostics",-1)])),_:1,__:[12]})]),e("li",null,[n(i,{to:"#xrayui-diagnostics-xrayui"},{default:s(()=>a[13]||(a[13]=[r("xrayui diagnostics xrayui",-1)])),_:1,__:[13]})]),e("li",null,[n(i,{to:"#xrayui-diagnostics-env"},{default:s(()=>a[14]||(a[14]=[r("xrayui diagnostics env",-1)])),_:1,__:[14]})]),e("li",null,[n(i,{to:"#xrayui-diagnostics-iptables"},{default:s(()=>a[15]||(a[15]=[r("xrayui diagnostics iptables",-1)])),_:1,__:[15]})])])]),e("li",null,[n(i,{to:"#automation-cron"},{default:s(()=>a[16]||(a[16]=[r("Automation (cron)",-1)])),_:1,__:[16]}),e("ul",null,[e("li",null,[n(i,{to:"#xrayui-cron-addjobs"},{default:s(()=>a[17]||(a[17]=[r("xrayui cron addjobs",-1)])),_:1,__:[17]})]),e("li",null,[n(i,{to:"#xrayui-cron-deletejobs"},{default:s(()=>a[18]||(a[18]=[r("xrayui cron deletejobs",-1)])),_:1,__:[18]})])])]),e("li",null,[n(i,{to:"#install-backup-and-ui-maintenance"},{default:s(()=>a[19]||(a[19]=[r("Install, backup, and UI maintenance",-1)])),_:1,__:[19]}),e("ul",null,[e("li",null,[n(i,{to:"#xrayui-install-xrayui-uninstall"},{default:s(()=>a[20]||(a[20]=[r("xrayui install / xrayui uninstall",-1)])),_:1,__:[20]})]),e("li",null,[n(i,{to:"#xrayui-backup"},{default:s(()=>a[21]||(a[21]=[r("xrayui backup",-1)])),_:1,__:[21]})]),e("li",null,[n(i,{to:"#xrayui-remount-ui"},{default:s(()=>a[22]||(a[22]=[r("xrayui remount_ui",-1)])),_:1,__:[22]})]),e("li",null,[n(i,{to:"#xrayui-service-event-startup"},{default:s(()=>a[23]||(a[23]=[r("xrayui service_event startup",-1)])),_:1,__:[23]})]),e("li",null,[n(i,{to:"#xrayui-service-event-configuration-logs-fetch"},{default:s(()=>a[24]||(a[24]=[r("xrayui service_event configuration logs fetch",-1)])),_:1,__:[24]})]),e("li",null,[n(i,{to:"#xrayui-service-event-firewall-configure"},{default:s(()=>a[25]||(a[25]=[r("xrayui service_event firewall configure",-1)])),_:1,__:[25]})]),e("li",null,[n(i,{to:"#xrayui-service-event-firewall-cleanup"},{default:s(()=>a[26]||(a[26]=[r("xrayui service_event firewall cleanup",-1)])),_:1,__:[26]})])])])])]),a[28]||(a[28]=t(`<h2 id="service-lifecycle" tabindex="-1"><a class="header-anchor" href="#service-lifecycle"><span>Service lifecycle</span></a></h2><h3 id="xrayui-start" tabindex="-1"><a class="header-anchor" href="#xrayui-start"><span><code>xrayui start</code></span></a></h3><p>Start Xray and all UI dependencies; sets up routing/policies as needed.</p><h3 id="xrayui-stop" tabindex="-1"><a class="header-anchor" href="#xrayui-stop"><span><code>xrayui stop</code></span></a></h3><p>Stop Xray cleanly and remove any rules/routes XrayUI added.</p><h3 id="xrayui-restart" tabindex="-1"><a class="header-anchor" href="#xrayui-restart"><span><code>xrayui restart</code></span></a></h3><p>Stop, then start again; rebuild routes from scratch.</p><h3 id="xrayui-version" tabindex="-1"><a class="header-anchor" href="#xrayui-version"><span><code>xrayui version</code></span></a></h3><p>Print the current XrayUI version and the installed Xray‑core version.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">xrayui version</span>
<span class="line"><span class="token comment"># XRAYUI: 0.56.1, XRAY-CORE: 25.6.8</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="updates" tabindex="-1"><a class="header-anchor" href="#updates"><span>Updates</span></a></h2><h3 id="xrayui-update" tabindex="-1"><a class="header-anchor" href="#xrayui-update"><span><code>xrayui update</code></span></a></h3><p>Update XrayUI to the latest stable release.</p><h3 id="xrayui-update-version" tabindex="-1"><a class="header-anchor" href="#xrayui-update-version"><span><code>xrayui update &lt;version&gt;</code></span></a></h3><p>Install a specific XrayUI version.</p><h3 id="xrayui-update-xray-version-latest" tabindex="-1"><a class="header-anchor" href="#xrayui-update-xray-version-latest"><span><code>xrayui update xray &lt;version|latest&gt;</code></span></a></h3><p>Pin or upgrade the Xray‑core package.</p><h2 id="health-diagnostics" tabindex="-1"><a class="header-anchor" href="#health-diagnostics"><span>Health &amp; diagnostics</span></a></h2><h3 id="xrayui-fixme" tabindex="-1"><a class="header-anchor" href="#xrayui-fixme"><span><code>xrayui fixme</code></span></a></h3><p>Run a quick self‑diagnostic and attempt safe auto‑repair.</p><h3 id="xrayui-diagnostics" tabindex="-1"><a class="header-anchor" href="#xrayui-diagnostics"><span><code>xrayui diagnostics</code></span></a></h3><p>Full diagnostics bundle: environment, iptables/routing, and XrayUI checks.</p><h3 id="xrayui-diagnostics-xrayui" tabindex="-1"><a class="header-anchor" href="#xrayui-diagnostics-xrayui"><span><code>xrayui diagnostics xrayui</code></span></a></h3><p>Diagnostics focused on XrayUI files, status, and service hooks.</p><h3 id="xrayui-diagnostics-env" tabindex="-1"><a class="header-anchor" href="#xrayui-diagnostics-env"><span><code>xrayui diagnostics env</code></span></a></h3><p>Collect system and environment details relevant to Xray.</p><h3 id="xrayui-diagnostics-iptables" tabindex="-1"><a class="header-anchor" href="#xrayui-diagnostics-iptables"><span><code>xrayui diagnostics iptables</code></span></a></h3><p>Audit routing/firewall rules managed by XrayUI.</p><h2 id="automation-cron" tabindex="-1"><a class="header-anchor" href="#automation-cron"><span>Automation (cron)</span></a></h2><h3 id="xrayui-cron-addjobs" tabindex="-1"><a class="header-anchor" href="#xrayui-cron-addjobs"><span><code>xrayui cron addjobs</code></span></a></h3><p>Create recommended cron tasks: log rotation, update checks, GeoData refresh.</p><h3 id="xrayui-cron-deletejobs" tabindex="-1"><a class="header-anchor" href="#xrayui-cron-deletejobs"><span><code>xrayui cron deletejobs</code></span></a></h3><p>Remove all cron tasks previously created by <code>addjobs</code>.</p><h2 id="install-backup-and-ui-maintenance" tabindex="-1"><a class="header-anchor" href="#install-backup-and-ui-maintenance"><span>Install, backup, and UI maintenance</span></a></h2><h3 id="xrayui-install-xrayui-uninstall" tabindex="-1"><a class="header-anchor" href="#xrayui-install-xrayui-uninstall"><span><code>xrayui install</code> / <code>xrayui uninstall</code></span></a></h3><p>Install or completely remove the plugin and its service unit.</p><h3 id="xrayui-backup" tabindex="-1"><a class="header-anchor" href="#xrayui-backup"><span><code>xrayui backup</code></span></a></h3><p>Create a backup of configuration and data you can copy off‑router. Backups are stored in <code>/opt/share/xrayui/backup</code> directory.</p><p>At the moment XRAYUI backup these entities:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">/jffs/xrayui_custom <span class="token comment"># user xrayui trigger scripts</span></span>
<span class="line">/opt/etc/xray <span class="token comment"># all JSON files and certificates</span></span>
<span class="line">/opt/etc/xrayui.conf <span class="token comment"># config file containing xrayui general settings</span></span>
<span class="line">/opt/share/xrayui/data <span class="token comment"># user defined geodat decompiled (sources) files</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container caution"><p class="hint-container-title">Caution</p><p>There is no way at the moment to restore backup, this is a manual process.</p></div><h3 id="xrayui-remount-ui" tabindex="-1"><a class="header-anchor" href="#xrayui-remount-ui"><span><code>xrayui remount_ui</code></span></a></h3><p>Re‑mount the X‑RAY tab into the web UI (useful after firmware/UI refreshes).</p><p>Advanced: service events</p><p>These are primarily called by hooks or the web UI but are safe to invoke from SSH when troubleshooting.</p><h3 id="xrayui-service-event-startup" tabindex="-1"><a class="header-anchor" href="#xrayui-service-event-startup"><span><code>xrayui service_event startup</code></span></a></h3><p>Post‑boot initialization.</p><h3 id="xrayui-service-event-configuration-logs-fetch" tabindex="-1"><a class="header-anchor" href="#xrayui-service-event-configuration-logs-fetch"><span><code>xrayui service_event configuration logs fetch</code></span></a></h3><p>Export service logs to the web UI’s log viewer.</p><h3 id="xrayui-service-event-firewall-configure" tabindex="-1"><a class="header-anchor" href="#xrayui-service-event-firewall-configure"><span><code>xrayui service_event firewall configure</code></span></a></h3><p>Apply iptables rules without restarting Xray.</p><h3 id="xrayui-service-event-firewall-cleanup" tabindex="-1"><a class="header-anchor" href="#xrayui-service-event-firewall-cleanup"><span><code>xrayui service_event firewall cleanup</code></span></a></h3><p>Remove iptables rules without restarting Xray.</p>`,53))])}const f=l(c,[["render",x]]),v=JSON.parse('{"path":"/en/cli.html","title":"Command‑line (CLI)","lang":"en-US","frontmatter":{},"git":{"updatedTime":1753827812000,"contributors":[{"name":"Daniel Lavrushin","username":"","email":"dala@milestone.dk","commits":3}],"changelog":[{"hash":"21ac6e7f45d3b801d17585dee9cb5afd7bb5dd6e","time":1753827812000,"email":"lavrushin@gmail.com","author":"Daniel Lavrushin","message":"Add Bypass/Redirect Policy documentation and import configuration guide"},{"hash":"ed4d2a153d8f7f87bd4c84addc4f017574079b01","time":1753733305000,"email":"lavrushin@gmail.com","author":"Daniel Lavrushin","message":"fix: Correct typos in CLI and installation documentation"},{"hash":"b3ff7f4ead0d7f281a943cfe0f29c45d8caead29","time":1753713773000,"email":"dala@milestone.dk","author":"Daniel Lavrushin","message":"initi docs setup"}]},"filePathRelative":"en/cli.md"}');export{f as comp,v as data};
