import{_ as a}from"./20250902212115-_KGnQBw1.js";import{_ as t,c as o,a as s,o as n}from"./app-eTybrgsj.js";const i="/asuswrt-merlin-xrayui/assets/20250902212219-BwBkHJcJ.png",r="/asuswrt-merlin-xrayui/assets/20250902212322-CBa34KFw.png",l="/asuswrt-merlin-xrayui/assets/20250902212348-C7BcNg8v.png",c="/asuswrt-merlin-xrayui/assets/20250902212551-T9Rbb92W.png",d="/asuswrt-merlin-xrayui/assets/20250902214654-BheAWMr3.png",u={};function m(p,e){return n(),o("div",null,e[0]||(e[0]=[s('<h1 id="custom-geosite-files" tabindex="-1"><a class="header-anchor" href="#custom-geosite-files"><span>Custom Geosite Files</span></a></h1><p>Sometimes it is crucial to add many domains to the rules. Due to MerlinWRT firmware limitations, it is not possible to include large lists directly in the UI.</p><p>Instead, you can create custom geosite domain files and reference them with tags in your rules.</p><p><img src="'+a+`" alt="geosite"></p><h2 id="what-are-geosite-files" tabindex="-1"><a class="header-anchor" href="#what-are-geosite-files"><span>What Are Geosite Files?</span></a></h2><p>In <strong>Xray</strong>, geosite files are a way to group domains into reusable sets (known as <em>tags</em>).<br> These tags can then be referenced inside your routing rules to decide how traffic should be handled (e.g., direct, proxy, block).</p><p>Geosite files are essentially collections of domain patterns. They support different match types:</p><ul><li><code>domain:</code> – matches a domain and all its subdomains (e.g., <code>domain:google.com</code> matches <code>google.com</code> or subdomains e.g. <code>mail.google.com</code>).</li><li><code>full:</code> – matches the domain exactly (e.g., <code>full:github.com</code> matches only <code>github.com</code>).</li><li><code>regexp:</code> – matches domains using regular expressions (e.g., <code>regexp:.*\\.gov</code>).</li><li><code>keyword:</code> – matches domains containing the keyword (e.g., <code>keyword:bank</code>).</li></ul><p>Xray uses a prebuilt geosite database (<code>/opt/sbin/geosite.dat</code>) by default, but with XRAYUI you can extend this database by creating your own custom geosite files (stored inside <code>/opt/sbin/xrayui</code>).<br> This gives you full control to group specific domains into custom tags for routing rules.</p><p>For example, you can create a custom group of streaming sites:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">domain:netflix.com</span>
<span class="line">domain:hulu.com</span>
<span class="line">domain:disneyplus.com</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>and then use the tag <code>ext:xrayui:streaming</code> inside your rules.</p><hr><h2 id="general-information" tabindex="-1"><a class="header-anchor" href="#general-information"><span>General Information</span></a></h2><p>There are two ways to add domains to the XRAYUI custom geosite file:</p><ul><li>Using the UI interface. However, Merlin Firmware still limits large domain lists (8000 characters limit per file).</li><li>Creating a file directly on the router and recompiling the geosite data file from the UI (no limitation size).</li></ul><hr><h2 id="interface-overview" tabindex="-1"><a class="header-anchor" href="#interface-overview"><span>Interface Overview</span></a></h2><p>In the <code>Routing</code> section, locate the <strong>Geoip/GeoSite Metadata</strong> row and click the <strong>manage local files</strong> button.<br><img src="`+i+'" alt="row"></p><p>A popup window will appear:<br><img src="'+r+'" alt="new window"><br><img src="'+l+'" alt="new window"></p><ul><li>Select a file from the dropdown list to either create a new one or manage an existing file.</li><li>Click the <strong>recompile all</strong> button to rebuild all existing files into a geosite file.</li></ul><p>When you select a file (new or existing), additional options will appear:<br><img src="'+c+`" alt="edit file"></p><ul><li>Provide a common name (<strong>tag</strong>) for the group of domains you are listing.</li><li><strong>Content</strong> – add the domains you want included in the geosite file.</li></ul><div class="hint-container tip"><p class="hint-container-title">domains</p><p>You can apply standard geosite rules to your list (e.g., prefixes such as <code>domain:</code>, <code>regexp:</code>, <code>full:</code>, or even custom <code>url:</code>).</p></div><p>You can also add a custom prefix <code>url:</code> – a URL pointing to an online domain list.<br> If <code>url:</code> is set, the DatBuilder will fetch the domains from this source and append them under the current category.<br> Here’s an example of such a <a href="https://raw.githubusercontent.com/itdoginfo/allow-domains/main/Russia/inside-raw.lst" target="_blank" rel="noopener noreferrer">source URL</a>.</p><p>For example:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">url:https://raw.githubusercontent.com/itdoginfo/allow-domains/main/Russia/inside-raw.lst</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You can use multiple URLs in a single category. The only requirement is that each URL must be placed on a new line with the <code>url:</code> prefix.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>This is an extremely useful feature when you want to build dynamic custom <code>dat</code> files.<br> From the general options you can enable <a href="general-options#auto-update-geodata-files">Auto-update geodata files</a>, and XRAYUI will automatically fetch all the custom sources and recompile the <code>dat</code> file.</p></div><p>Click the <strong>compile</strong> button to recompile the geosite file.</p><div class="hint-container info"><p class="hint-container-title">Info</p><p>Note the yellow <code>ext:xrayui:xxxx</code> label in the top-right corner. This is the tag you will use in your rules. You can copy and paste it later.</p></div><hr><h2 id="updating-domains-directly" tabindex="-1"><a class="header-anchor" href="#updating-domains-directly"><span>Updating Domains Directly</span></a></h2><p>If you have a very large domain list, you cannot upload it through the web interface due to MerlinWRT firmware limitations.<br> However, you can still add it manually.</p><ol><li>Create a file without an extension (for example: <code>mydomains</code>).</li><li>Upload this file to the <code>/opt/share/xrayui/data</code> directory.</li></ol><p>Next, go to <strong>manage local files</strong> in the <code>Routing</code> section:<br><img src="`+i+'" alt="row"></p><p>Click the <strong>recompile all</strong> button. This recompiles all files inside <code>/opt/share/xrayui/data</code> without needing to edit them in the UI.</p><p>Finally, use the tag <code>ext:xrayui:mydomains</code> in your rules as usual.</p><hr><h2 id="example-usage-in-xray-rules" tabindex="-1"><a class="header-anchor" href="#example-usage-in-xray-rules"><span>Example Usage in Xray Rules</span></a></h2><p>Once your geosite file is ready, you can use it in your <code>routing</code> rules. For example:</p><p><img src="'+d+'" alt="rules"></p><p>Notice the autocomplete feature. This will help you to correctly select the right group of domains from the list.</p>',43)]))}const f=t(u,[["render",m]]),y=JSON.parse('{"path":"/en/custom-geodata.html","title":"Custom Geosite Files","lang":"en-US","frontmatter":{},"git":{"updatedTime":1757346344000,"contributors":[{"name":"Daniel Lavrushin","username":"","email":"lavrushin@gmail.com","commits":2}],"changelog":[{"hash":"d4c3147d892288aa13403d5852ec8b65224d8304","time":1757346344000,"email":"lavrushin@gmail.com","author":"Daniel Lavrushin","message":"fix: Refactor geodata update process and add URL fetching functionality"},{"hash":"6f3c3543635bbdd5abc97e89d3a907a66e20d92e","time":1756842931000,"email":"lavrushin@gmail.com","author":"Daniel Lavrushin","message":"Add custom geosite files documentation in English and Russian"}]},"filePathRelative":"en/custom-geodata.md"}');export{f as comp,y as data};
