{
  "labels": {
    "import": "import",
    "reconnect": "reconnect",
    "stop": "stop",
    "show_config": "show config",
    "manage": "manage",
    "add": "add",
    "server": "server",
    "client": "client",
    "transport": "transport",
    "sniffing": "sniffing",
    "apply": "apply",
    "close": "close",
    "cancel": "cancel",
    "accept": "accept",
    "save": "save",
    "edit": "edit",
    "redorder": "move up",
    "xrayui_desc": "This UI control page provides a simple interface to manage and monitor the X-ray Core's configuration and it's status."
  },
  "components": {
    "ClientStatus": {
      "configuration": "Configuration",
      "connection_status": "Connection status",
      "general_options": "General options",
      "xray_connecting": "Checking connection...",
      "xray_connected": "XRAY is connected",
      "xray_stopped": "XRAY is stopped",
      "xray_running": "XRAY service is running"
    },

    "GeneralOptionsModal": {
      "modal_title": "XRAYUI General Settings",
      "check_xray_connection": "Check connection to xray server",
      "start_xray_on_reboot": "Start X-RAY on router reboot",
      "modalConnectTitle": "XRAY Connection Check",
      "modalConnectCheckDescription": "<p>This option verifies that the actual connection is working by sending a request to <a href=\"https://ip-api.com/\" target=\"_blank\">ip-api.com</a> through the outbound proxy at startup.</p><p>XRAYUI will insert a system rule into the routing rules and create a SOCKS inbound proxy for this check. These system settings are tagged with <code>sys</code> and will remain hidden in the UI.</p>"
    },
    "ImportConfig": {
      "import_config_file": "Import config file"
    },
    "ImportConfigModal": {
      "modal_title": "Import configuration",
      "modal_desc": "Here you can import a configuration from a QR code or a protocol URL.",
      "label_qr_code": "QR code",
      "label_proxy_uri": "Outbound Proxy Uri",
      "label_complete_setup": "I'd like to have a complete setup!",
      "label_unblock": "Unblock",
      "label_dont_break": "Don't break my network devices",
      "hint_qr_code": "Try to print screen your QR code and xrayui will try to read it.",
      "hint_proxy_uri": "You can paste here the URL of the protocol here. Usually they start with `vless://` or `vmess://`.",
      "hint_complete_setup": "If you select this option, xrayui will overwrite your current configuration with the most suitabledefault configuration for the imported protocol.<hr />A default Routing rule will be created to test the proxy outbound connection. After importing and applying the configuration, you can try to open the `https://ip-api.com/`. You should see the IP of the server you are connected to.<hr />After that, it is recommended to set up your your own traffic routing rules.",
      "hint_unblock": "  Select the services you want to unblock. This will automatically create a `routing rule` that channels their traffic through the proxy.<hr />It's recommended to only choose services that are blocked in your region. You'll be able to add, update, or delete these rules later in the `Routing` section.",
      "hint_dont_break": "Check this box if you have IoT devices on your router network, like `Smart TVs`, `Xbox`, `PlayStation` or other devices you prefer not to affect with X-RAY. <hr />This option limits the rerouted traffic to X-RAY via your router, reducing the risk of disconnecting these devices. Later You can adjust this option in the Routing section (`Ports Bypass/Redirect Policy`).<hr />If you don't have any IoT devices, it's best to leave this option unchecked."
    },
    "ConfigModal": {
      "modal_title": "Show XRAY configuration file",
      "hide_sensetive_data": "hide sensitive data",
      "open_raw": "open raw",
      "copy_to_clipboard": "copy to clipboard",
      "alert_copy_ok_hiddendata": "Configuration copied to clipboard. Sensitive data has been hidden. However, please review the configuration before sharing.",
      "alert_copy_ok_nohiddendata": "Configuration copied to clipboard. Warning: Sensitive data is visible. Please be cautious when sharing."
    },
    "Dns": {
      "title": "DNS",
      "label_tag": "Tag",
      "label_hosts": "Hosts",
      "label_servers": "Servers",
      "label_client_ip": "Client IP",
      "label_query_strategy": "Query strategy",
      "label_disable_cache": "Disable cache",
      "label_disable_fallback": "Disable fallback",
      "label_fallback_if_match": "Fallback if match",
      "hint_title": "The DNS module built into Xray has two main purposes:<ul><li>During the routing phase, it resolves domain names to IP addresses and performs traffic splitting based on the results of domain name resolution and the value of domainStrategy in the routing configuration module. The built-in DNS server is only used for DNS queries when either of the following values is set:<ul><li>**IPIfNonMatch**: When a domain name is requested, it first tries to match it against the domain entries in the routing configuration. If no match is found, the built-in DNS server is used to perform a DNS query for the domain name, and the returned IP address is used to perform IP routing matching again.</li><li>**IPOnDemand**: When a domain name is matched against any IP-based rule, it is immediately resolved to an IP address for matching.</li></ul></li><li>It resolves the target address for connection.</li><li>In the freedom outbound setting, if **domainStrategy** is set to **UseIP**, request through the outbound proxy will first resolve the domain name to an IP address using the built-in server before making the connection.</li><li>In the sockopt setting, if **domainStrategy** is set to **UseIP**, system connections initiated through the outbound proxy will first be resolved to an IP address using the built-in server before making the connection.</li></ul>",
      "hint_tag": "Traffic generated by built-in **DNS**, except for localhost, fakedns, **TCPL**, **DOHL**, and **DOQL** modes, can be matched with `inboundTag` in routing using this identifier.",
      "hint_hosts": " A list of static `IP addresses`, with values consisting of a series of domains and addresses. The address can be an IP or a domain name. When resolving a domain name, if the domain name matches an item in this list:<ul><li>If the address of the item is an IP, the resolution result will be that IP.</li><li>If the address of the item is a domain name, this domain name will be used for IP resolution instead of the original domain name.</li><li>If multiple IPs and domain names are set in the address, only the first domain name will be returned, and the rest of the IPs and domain names will be ignored.</li></ul>",
      "hint_servers": " A list of DNS servers. The address can be an IP or a domain name. When resolving a domain name, the DNS server will be used for resolution.",
      "hint_client_ip": "Used to notify the server of the specified IP location during `DNS` queries. Cannot be a private address.",
      "hint_query_strategy": "`UseIPv4` only queries A records; `UseIPv6` only queries `AAAA` records. The default value is `UseIP`, which queries both `A` and `AAAA` records.",
      "hint_disable_cache": "`true` disables DNS caching, default is `false` which means caching is not disabled.",
      "hint_disable_fallback": "`true` disables fallback DNS queries, default is `false` which means fallback queries are not disabled.",
      "hint_fallback_if_match": "`true` disables fallback DNS queries when the matching domain list of the DNS server is hit, default is `false` which means fallback queries are not disabled."
    },
    "Routing": {
      "title": "Routing",
      "label_domain_strategy": "Domain strategy",
      "label_domain_matcher": "Domain matcher",
      "label_rules": "Rules",
      "label_geodat_metadata": "GeoIp/GeoSite Metadata",
      "label_ports_policy": "Ports Bypass/Redirect Policy",
      "manage_local_files": "manage local files",
      "update_community_files": "update community files",
      "hint_title": "The routing module can send inbound data through different outbound connections according to different rules to achieve on-demand proxying. <p>A common use case is to split domestic and foreign traffic. Xray can use its internal mechanisms to determine the traffic from different regions and then send them to different outbound proxies.</p>",
      "hint_domain_strategy": "The domain name resolution strategy, which uses different strategies based on different settings.<ul><li>**AsIs**: Use only the domain name for routing selection. Default value.</li><li> **IPIfNonMatch**: If the domain name does not match any rule, resolve the domain name into an IP address (A record or AAAA record) and match it again<ul><li>When a domain name has multiple A records, it will try to match all A records until one of them matches a rule</li><li>The resolved IP only works for routing selection, and the original domain name is still used in the forwarded packets</li></ul></li><li>**IPOnDemand**: If any IP-based rules are encountered during matching, immediately resolve the domain name into an IP address for matching</li></ul>",
      "hint_domain_matcher": "The domain name matching algorithm, which uses different algorithms based on different settings. This option affects all RuleObject that do not have a separately specified matching algorithm.<ul><li>**hybrid**: Use the new domain name matching algorithm, which is faster and takes up less space. Default value.</li> <li>**linear**: Use the original domain name matching algorithm.</li> </ul>",
      "hint_rules": "An array corresponding to a list of rules. For each connection, the routing will judge these rules from top to bottom in order. When it encounters the first effective rule, it will forward the connection to the outboundTag or balancerTag specified by the rule. <blockquote>When no rules match, the traffic is sent out by the first outbound by default.</blockquote>",
      "hint_geodat_metadata": "Update the GeoIP and GeoSite metadata files. This operation will take some time, please be patient.",
      "hint_ports_policy": "By default, the mode `redirect` is used, meaning that traffic on all ports is redirected to the inbound port of xray. Specify any additional ports that should be routed through or bypass Xray. <ul> <li><strong>redirect</strong>: Traffic on all ports is redirected to the inbound port. You define the ports that should NOT be redirected to Xray.</li> <li><strong>bypass</strong>: Traffic on all ports bypasses Xray. You define the ports that should be explicitly redirected to Xray.</li> </ul>"
    },
    "RulesModal": {
      "modal_title": "Manage routing rules",
      "modal_title2": "Available routing rules",
      "rule_no": "rule #{0}",
      "no_rules_defined": "No rules defined",
      "add_new_rule": "Add new rule",
      "label_friendly_name": "Friendly name",
      "label_outbound_tag": "Outbound connection",
      "label_inbound_tags": "Inbound connections",
      "label_users": "Apply to Users",
      "label_domain_matcher": "Domain matcher",
      "label_network": "Network",
      "label_protocols": "Protocols",
      "label_domains": "Domains",
      "label_target_ips": "Target IP List",
      "label_target_ports": "The target port range",
      "label_source_ips": "Source IP List",
      "label_source_ports": "The source port",
      "alert_delete_rule_confirm": "Are you sure you want to delete this rule?",
      "hint_friendly_name": "A friendly name for the rule.",
      "hint_outbound_tag": "The tag of the outbound proxy. This rule will take effect when the outbound connection matches the tag.",
      "hint_inbound_tags": "An array where each item represents an inbound proxy tag. This rule will take effect when the inbound connection matches any of the tags in the array.",
      "hint_users": "Apply this rule to specific users. This rule will take effect when the source user matches any of the email.",
      "hint_domain_matcher": "The domain name matching algorithm, which uses different algorithms based on different settings. This option affects all RuleObject that do not have a separately specified matching algorithm.<ul><li>**hybrid**: Use the new domain name matching algorithm, which is faster and takes up less space. Default value.</li><li>**linear**: Use the original domain name matching algorithm.</li></ul>",
      "hint_network": "This can be **tcp**, **udp**, or **tcp,udp**. This rule will take effect when the connection method is the specified one.",
      "hint_protocols": "An array where each item represents a protocol. This rule will take effect when the protocol of the  current connection matches any of the protocols in the array. <blockquote>The `sniffing` option in the inbound proxy must be enabled to detect the protocol type used by the connection.</blockquote>",
      "hint_domains": "An array where each item is a domain match.<ul><li>Plain string: If this string matches any part of the target domain, the rule takes effect.</li><li>Regular expression: Starts with **regexp:** followed by a regular expression.</li><li>Subdomain (recommended): Starts with **domain:** followed by a domain. When this domain is the target domain or a subdomain of the target domain, the rule takes effect. For example, `domain:xray.com` matches `www.xray.com` and `xray.com`, but not `wxray.com`.</li><li>Exact match: Starts with **full:** followed by a domain. When this domain is an exact match for the target domain, the rule takes effect. For example, `full:xray.com` matches `xray.com` but not `www.xray.com`.</li><li>Predefined domain list: Starts with **geosite:** followed by a name such as `geosite:google` or `geosite:youtube`. Ensure to get latest geodata (press `update metadata` in the `routing` section).</li><li>Load domains from a file: Formatted as **ext:file:tag**, where the file is stored in the resource directory and has the same format as geosite.dat. The tag must exist in the file.</li></ul>",
      "hint_target_ips": "An array where each item represents an IP range. This rule will take effect when the target IP matches any of the IP ranges in the array.",
      "hint_target_ports": "The target port range, which can take on three forms:<ul><li>`a-b`: a and b are both positive integers less than `65536`. This range is a closed interval, and this rule will take effect when the target port falls within this range.</li><li>`a`: a is a positive integer less than `65536`. This rule will take effect when the target port is a.</li><li>A mixture of the above two forms, separated by commas, For example: `53,443,1000-2000`.</li></ul>",
      "hint_source_ips": "An array where each item represents an IP range in the format of IP, CIDR, GeoIP, or loading IP from a file. This rule will take effect when the source IP matches any of the IP ranges in the array.",
      "hint_source_ports": "The source port, which can take on three forms:<ul><li>`a-b`: a and b are both positive integers less than `65536`. This range is a closed interval, and this rule will take effect when the target port falls within this range.</li> <li>`a`: a is a positive integer less than `65536`. This rule will take effect when the target port is a.</li><li>A mixture of the above two forms, separated by commas, For example: `53,443,1000-2000`.</li></ul>"
    },
    "Inbounds": {
      "title": "Inbounds",
      "label_create_new": "Create new",
      "modal_title_inbound_settings": "Inbound settings",
      "alert_tag_exists": "Tag  already exists, please choose another one.",
      "alert_delete_confirm": "Are you sure you want to delete this inbound?"
    },
    "Outbounds": {
      "title": "Outbounds",
      "label_create_new": "Create new",
      "alert_tag_exists": "Tag  already exists, please choose another one.",
      "alert_delete_confirm": "Are you sure you want to delete this outbound?"
    },
    "StreamSettingsModal": {
      "title": "Transport settings",
      "modal_security_title": "Security settings",
      "modal_title": "Transports specify how Xray communicates with peers",
      "modal_desc": "Transports specify how to achieve stable data transmission. Both ends of a connection often need to specify the same transport protocol to successfully establish a connection. Like, if one end uses WebSocket, the other end must also use WebSocket, or else the connection cannot be established.",
      "label_security": "Security",
      "label_network": "Network",
      "label_tproxy": "Transparent Proxy (tproxy)",
      "hint_tproxy": "Specifies the socket options for the transport layer. The default value is `off`.",
      "hint_security": "Specifies the security settings for the transport layer. The default value is `none`.",
      "hint_network": "Specifies the network protocol. The default value is `tcp`."
    },
    "Reality": {
      "modal_title": "REALITY Settings",
      "modal_desc": "Configures REALITY. REALITY is a piece of advanced encryption technology developed in-house, with higher security than vanilla TLS, but configs of both are largely the same.",
      "label_enable_logs": "Enable logs",
      "label_dest": "Destination",
      "label_server_names": "Server names",
      "label_server_name": "Server name",
      "label_short_id": "Short ID",
      "label_short_ids": "Short IDs",
      "label_proxy_version": "Proxy version",
      "label_private_key": "Private key",
      "label_public_key": "Public key",
      "label_spider_x": "Spider X",
      "label_fingerprint": "Fingerprint",
      "hint_enable_logs": "Emits verbose logs when `true`.",
      "hint_dest": "The destination address of the server. Same schema as `dest` in `VLESS`. **Required**. same as dest in VLESS.",
      "hint_server_names": "A list of accepted server names. No support for `*` wildcards yet. **Required**.",
      "hint_server_name": "One of the server names accepted by the server.. **Required**.",
      "hint_short_id": "One of the short IDs accepted by the server.<hr>`shortId` on clients can be left blank if a blank value exists on the server.",
      "hint_short_ids": "**Required**. A list of `shortIds` accepted. Can be used to dist``inguish different clients. Specified in hex strings, with the length as multiples of `2`. Cannot be longer than `16` characters.<br />`shortId` on clients can be left blank if a blank value exists on the server.",
      "hint_proxy_version": "The version of the PROXY protocol to use. Same schema as `xver` in `VLESS`. **Optional**.",
      "hint_private_key": "Generate with `xray x25519`. **Required**.",
      "hint_public_key": "The public key that corresponds to the private key on the server. Can be obtained by `xray x25519 -i -privateKey-`. **Required**.",
      "hint_spider_x": "The bootstrapping path and query params of the spider. It's recommended to have this varied per client.",
      "hint_fingerprint": " Specifies the fingerprint of the TLS Client Hello message. When empty, fingerprint simulation will not be enabled. When enabled, Xray will simulate the TLS fingerprint through the uTLS library or have it generated randomly.<ul><li>`random`: randomly select one of the up-to-date browsers</li><li>`randomized`: generate a completely random and unique fingerprint (100% compatible with TLS 1.3 using `X25519`) </li> </ul>",
      "add_new_id": "Add new ID"
    }
  }
}
